name: Test

on:
    workflow_dispatch:
    pull_request:
    push:
        branches:
            - main

env:
    WTOOLS_AEAD_KEY: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

jobs:
    rust-clippy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - uses: hecrj/setup-rust-action@v1
              with:
                  components: clippy
                  rust-version: nightly

            - uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cache-test-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
                  restore-keys: |
                      ${{ runner.os }}-cache-test-${{ hashFiles('**/Cargo.lock') }}
                      ${{ runner.os }}-cache-test-

            - name: Install webkit2gtk
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libappindicator3-dev

            - name: Run clippy
              run: cargo clippy --workspace --no-default-features --features server

    rust-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - uses: hecrj/setup-rust-action@v1

            - uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cache-test-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
                  restore-keys: |
                      ${{ runner.os }}-cache-test-${{ hashFiles('**/Cargo.lock') }}
                      ${{ runner.os }}-cache-test-

            - name: Install webkit2gtk
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libappindicator3-dev

            - name: Run tests
              run: cargo test --workspace --no-default-features --features server

    bundle-tauri-debug:
        defaults:
            run:
                working-directory: gui

        strategy:
            fail-fast: false
            matrix:
                platform: [macos-latest, ubuntu-latest, windows-latest]

        runs-on: ${{ matrix.platform }}

        steps:
            - uses: actions/checkout@v2

            - uses: hecrj/setup-rust-action@v1

            - uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      ../target
                  key: ${{ runner.os }}-cache-test-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
                  restore-keys: |
                      ${{ runner.os }}-cache-test-${{ hashFiles('**/Cargo.lock') }}
                      ${{ runner.os }}-cache-test-

            - name: Cache pnpm modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-pnpm-modules
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-cache-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-pnpm-cache-

            - uses: pnpm/action-setup@v2
              with:
                  version: 6.x.x
                  run_install: true

            - name: Install linux dependencies
              if: runner.os == 'Linux'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libappindicator3-dev

            - name: tauri build
              run: pnpm tauri build -- --debug

    js:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: gui

        steps:
            - uses: actions/checkout@v2

            - name: Setup Node
              uses: actions/setup-node@v1
              with:
                  node-version: '16'

            - name: Cache pnpm modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-pnpm-modules
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-cache-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-pnpm-cache-

            - uses: pnpm/action-setup@v2
              with:
                  version: 6.x.x
                  run_install: true

            - name: Type check
              run: pnpm tsc

            - name: Create vite cache
              # not pre-bundling the dependencies makes the test itself fail
              continue-on-error: true
              run: pnpm test

            - name: Run tests
              run: pnpm test
